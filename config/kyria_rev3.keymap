/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// layer numbers

#define default 0
#define writing 1

// Uncomment this block if using RGB

&led_strip {
    chain-length = <6>;

    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs

    chain-length = <25>; // Uncomment if using only per-key LEDs.
};

/ {
    macros {
        ESCtoDefaultLayer: ESCtoDefaultLayer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &to 0>;
            label = "ESCTODEFAULTLAYER";
        };
        winSearchForProg: winSearchForProg {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &to 1>;
            label = "WINSEARCHFORPROG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&kp TAB     &none              &none      &none      &none      &none                                            &none     &none       &to 1   &none      &kp PAGE_UP    &none
&kp ESCAPE  &none              &none      &kp LG(D)  &kp LC(F)  &none                                            &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT  &kp PAGE_DOWN  &none
&none       &winSearchForProg  &kp LC(X)  &kp LC(C)  &kp LC(V)  &none  &kp SPACE  &none          &none    &none  &none     &kp C_MUTE  &none   &none      &none          &none
                                          &none      &none      &mo 3  &kp SPACE  &kp BACKSPACE  &kp RET  &mo 2  &none     &none       &none
            >;

            // rotary sensor binding
            // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

            label = "L0";
        };

        writing {
            bindings = <
&kp ESC             &kp Q  &kp W  &kp E   &kp R   &kp T                                             &kp Z   &kp U   &kp I      &kp O          &kp P          &kp SQT
&ESCtoDefaultLayer  &kp A  &kp S  &kp D   &kp F   &kp G                                             &kp H   &kp J   &kp K      &kp L          &kp SEMICOLON  &trans
&none               &kp Y  &kp X  &kp C   &kp V   &kp B  &none       &none          &none    &none   &kp N   &kp M   &kp COMMA  &kp LS(QMARK)  &kp MINUS      &trans
                                  &trans  &trans  &mo 3  &kp SPACE  &kp BACKSPACE  &kp RET  &mo 2   &trans  &trans  &trans
            >;

            label = "l1";
        };

        Symbols {
            bindings = <
&trans              &kp EXCLAMATION  &kp AT_SIGN    &kp POUND       &kp DOLLAR        &kp PERCENT                                                       &kp CARET               &kp AMPERSAND       &kp ASTERISK    &kp PIPE            &kp QUESTION  &trans
&ESCtoDefaultLayer  &kp BACKSLASH    &kp LESS_THAN  &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS                                              &kp RIGHT_PARENTHESIS   &kp RIGHT_BRACKET   &kp RIGHT_BRACE &kp GREATER_THAN    &kp SLASH     &trans
&trans              &trans           &trans         &trans          &kp RC(N5)        &trans                &trans      &trans          &trans  &trans  &none                   &none               &kp COMMA       &kp LS(QMARK)       &kp MINUS     &trans
                                        &trans          &trans                        &mo 3                 &kp SPACE   &kp BACKSPACE   &kp RET &mo 2   &trans                  &trans              &trans          
            >;

            label = "symbols";
        };

        Numbers {
            bindings = <
&kp KP_EQUAL        &kp LS(STAR)  &kp N7  &kp N8  &kp N9    &kp FSLH                                                &trans  &trans  &trans  &trans  &trans  &trans
&ESCtoDefaultLayer  &kp LS(PLUS)  &kp N4  &kp N5  &kp N6    &kp MINUS                                               &trans  &trans  &trans  &trans  &trans  &trans
&trans              &kp N0        &kp N1  &kp N2  &kp N3    &kp DOT     &trans      &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans    &trans    &mo 3       &kp SPACE   &kp BACKSPACE   &kp RET &mo 2  &trans  &trans  &trans
            >;

            label = "numbers";
        };
    };
};
